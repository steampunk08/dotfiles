#!/usr/bin/bash

BACKUP_NAME=backup-$(date "+%d%m%Y")
SAVE_SYMLINKS=true

show_usage() {
   cat <<EOF
Usage: backup [options] 

Options
   -a, archive all files in \$HOME 
   -f, perform actions in current session
       defualt uses tmux windows to achieve background
       processing
   -h, show this help message
   -s, save resulting archive to \$BACKUP_FOLDER
EOF
}

cd $HOME

if [[ -z $BACKUP_FOLDER ]]; then
   BACKUP_FOLDER=$TERMUX/backups
fi

if [ ! -d $BACKUP_FOLDER ]; then
   mkdir $BACKUP_FOLDER
fi

while getopts "asfh" argv; do
   case $argv in
      a ) BACKUP_FILES=(.)
         BACKUP_NAME="large-$BACKUP_NAME" ;;
      s ) EXPORT_BACKUP=true ;;
      f ) FOREGROUND=true ;;
      h ) show_usage ;;
      * ) show_usage && exit 1 ;;
   esac
done

if [ -z $BACKUP_FILES ]; then
   BACKUP_FILES=(dotfiles vim-steampunklights vim-swapcase)
fi

if [ $SAVE_SYMLINKS ]; then
   OPTIONS="-y"
fi

if [ -z $(which zip) ]; then
   EXTENSION=.tar.gz
   COMMAND="tar -cvz ${BACKUP_FILES[*]} -f $BACKUP_NAME.tar.gz"
else
   EXTENSION=.zip
   COMMAND="zip $OPTIONS $BACKUP_NAME.zip -r9 ${BACKUP_FILES[*]}"
fi

if [ $EXPORT_BACKUP ]; then
   COMMAND_2="mv $BACKUP_NAME${EXTENSION} $BACKUP_FOLDER"
fi

tmux has-session 2>/dev/null

if [ $? -ne 0 ] || [ $FOREGROUND ]; then
   $COMMAND
   [ $EXPORT_BACKUP ] && $COMMAND_2
else
   tmux new-window -d -c $HOME -n backup -t 10
   tmux send-keys -t :10 "$COMMAND" C-m
   if [ $EXPORT_BACKUP ]; then
      tmux send-keys -t :10 "$COMMAND_2" C-m
      tmux send-keys -t :10 "exit" C-m
   fi
fi

cd $OLDPWD
