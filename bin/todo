#!/usr/bin/env python3

#      author: Sphe M
# description: python version of my todo script 
#        date: 23 May 2019

import os
import argparse

TODO_FILENAME=os.environ.get("TODO_PATH", os.environ["HOME"] + "/.todo")
EDITOR=os.environ.get("EDITOR", "vim")

parser = argparse.ArgumentParser(
	description="script to manage todo's in $TODO_PATH",
	epilog="simple todo script written in python")

parser.add_argument("-c", "--clear", action="store_true",
	help="clear the todo file before writing MESSAGE")


parser.add_argument("-e", "--edit", action="store_true",
	 help="use $EDITOR to edit todo file")

parser.add_argument("-f", "--format",
	help="format to use when printing the todo's")

parser.add_argument("-l", "--list", action="store_true",
	help="list all todos using FORMAT")

parser.add_argument("message",
	nargs="*", help="todo message to write")

args = parser.parse_args()

def read_todos(filename):
    try:
	with open(filename, "r") as f:
		return list(f)
    except IOError:
        write_file(filename, "", "w")
    return []

def write_file(filename, message, mode="a"):
	if not len(message) and mode == "a": return
	
	with open(filename, mode) as f:
		f.write(message + "\n")

def list_todos(bullet):
	for i in read_todos(TODO_FILENAME):
		if i.startswith("\n"):
			continue
		print("%s%s" % (bullet, i.rstrip()))
        else: print("%sYou currently have no todo's" % bullet)

if __name__ == '__main__':
	if args.edit:
		os.system("%s %s" % (EDITOR, TODO_FILENAME))

	else:
		mode = "w" if args.clear else "a"
		message = "" if not len(args.message) else " ".join(args.message)
		write_file(TODO_FILENAME, message, mode)

	if args.list:
		bullet_format = "* " if args.format is None \
			else args.format

		list_todos(bullet_format)
